---
- name: include variable overrides
  include_vars: "{{ item }}"
  vars:
    include_files:
      - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "vars/{{ ansible_distribution }}.yml"
      - "vars/{{ ansible_os_family }}.yml"
  loop: "{{ q('first_found', include_files, errors='ignore') }}"

- name: install packages
  package:
    name: "{{ item }}"
    state: "{{ vim_packages_state }}"
  with_items: "{{ vim_packages | default(vim_packages_defaults) }}"
  become: yes

- block:

    - name: create tempdir
      tempfile:
        state: directory
        prefix: vim
      register: tempdir
      changed_when: false

    - name: retrieve spacevim installer
      get_url:
        url: "{{ vim_spacevim_installer }}"
        dest: "{{ tempdir.path }}/{{ vim_spacevim_installer | urlsplit('path') | basename }}"
        mode: 0700
      changed_when: false

    - name: execute spacevim installer
      command: "{{ tempdir.path }}/{{ vim_spacevim_installer | urlsplit('path') | basename }}"
      changed_when: false

    - name: create spacevim config dir
      file:
        state: directory
        path: "~{{ ansible_user_id }}/.SpaceVim.d"

    - name: configure spacevim
      template:
        src: spacevim.toml
        dest: "~{{ ansible_user_id }}/.SpaceVim.d/init.toml"
        force: "{{ vim_spacevim_config_force | bool }}"

  when: vim_spacevim_install | bool
  always:

    - name: remove tempdir
      file:
        state: absent
        path: "{{ tempdir.path }}"
      changed_when: false
